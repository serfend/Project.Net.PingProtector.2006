<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NETworkManager.Models</name>
    </assembly>
    <members>
        <member name="T:NETworkManager.Models.ApplicationManager">
            <summary>
            Provides methods to manage networkmanger applications.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.ApplicationManager.GetNames">
            <summary>
            Method to return all available applications in.
            </summary>
            <returns>All names as array.</returns>
        </member>
        <member name="M:NETworkManager.Models.ApplicationManager.GetList">
            <summary>
            Method returns a list with all <see cref="T:NETworkManager.Models.ApplicationInfo"/>.
            </summary>
            <returns>IEnumerable with <see cref="T:NETworkManager.Models.ApplicationInfo"/></returns>
        </member>
        <member name="M:NETworkManager.Models.ApplicationManager.GetIcon(NETworkManager.Models.ApplicationName)">
            <summary>
            Method will return the icon based on <see cref="T:NETworkManager.Models.ApplicationName"/>.
            </summary>
            <param name="name"><see cref="T:NETworkManager.Models.ApplicationName"/></param>
            <returns>Application icon as <see cref="T:System.Windows.Controls.Canvas"/>.</returns>
        </member>
        <member name="T:NETworkManager.Models.ApplicationName">
            <summary>
            Represents all available applications.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.None">
            <summary>
            No application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Dashboard">
            <summary>
            Dashboard application.
            </summary>            
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.NetworkInterface">
            <summary>
             Network interface application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.WiFi">
            <summary>
             WiFi application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.IPScanner">
            <summary>
            IP scanner application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.PortScanner">
            <summary>
            Port scanner application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.PingMonitor">
            <summary>
            Ping monitor application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Traceroute">
            <summary>
            Traceroute application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.DNSLookup">
            <summary>
            DNS lookup application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.RemoteDesktop">
            <summary>
            Remote Desktop application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.PowerShell">
            <summary>
            PowerShell application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.PuTTY">
            <summary>
            PuTTY application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.TigerVNC">
            <summary>
            TigerVNC application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.WebConsole">
            <summary>
            WebConsole application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.SNMP">
            <summary>
            SNMP application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.DiscoveryProtocol">
            <summary>
            Discovery protocol application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.WakeOnLAN">
            <summary>
            Wake on LAN application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Whois">
            <summary>
            Whois application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.SubnetCalculator">
            <summary>
            Subnet calculator application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Lookup">
            <summary>
            Lookup application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Connections">
            <summary>
            Connections application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.Listeners">
            <summary>
            Listeners application.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.ApplicationName.ARPTable">
            <summary>
            ARP table application.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.ApplicationInfo">
            <summary>
            Stores informations about an application.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.ApplicationInfo.Name">
            <summary>
            Name of the application.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.ApplicationInfo.IsVisible">
            <summary>
            Indicates that the application is visible to the user.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.ApplicationInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NETworkManager.Models.ApplicationInfo"/> class.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.ApplicationInfo.#ctor(NETworkManager.Models.ApplicationName)">
            <summary>
            Initializes a new instance of the <see cref="T:NETworkManager.Models.ApplicationInfo"/> class and passes the <see cref="P:NETworkManager.Models.ApplicationInfo.Name"/> as paramteter.
            </summary>
            <param name="name"><see cref="P:NETworkManager.Models.ApplicationInfo.Name"/></param>
        </member>
        <member name="M:NETworkManager.Models.ApplicationInfo.Equals(NETworkManager.Models.ApplicationInfo)">
            <summary>
            Method to check if an object is equal to this object.
            </summary>
            <param name="info">Object to check.</param>
            <returns>Equality as <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:NETworkManager.Models.ApplicationInfo.Equals(System.Object)">
            <summary>
            Method to check if an object is equal to this object.
            </summary>
            <param name="obj">Object from type <see cref="T:NETworkManager.Models.ApplicationInfo" /> to check.</param>
            <returns>Equality as <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:NETworkManager.Models.ApplicationInfo.GetHashCode">
            <summary>
            Method to return the hash code of this object.
            </summary>
            <returns>Hashcode as <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="T:NETworkManager.Models.Network.ConnectionState">
            <summary>
            Represents the state of a connection.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.ConnectionState.None">
            <summary>
            Connection has no state.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.ConnectionState.OK">
            <summary>
            Connection is OK.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.ConnectionState.Warning">
            <summary>
            Connection is warning.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.ConnectionState.Critical">
            <summary>
            Connection is critical.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.Network.DiscoveryProtocol">
            <summary>
            Class to capture network discovery protocol packages.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.DiscoveryProtocol.DiscoveryScript">
            <summary>
            Holds the PowerShell script which is loaded when the class is initialized.
            </summary>
        </member>
        <member name="E:NETworkManager.Models.Network.DiscoveryProtocol.PackageReceived">
            <summary>
            Is triggerd when a network package with a discovery protocol is received.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.OnPackageReceived(NETworkManager.Models.Network.DiscoveryProtocolPackageArgs)">
            <summary>
            Triggers the <see cref="E:NETworkManager.Models.Network.DiscoveryProtocol.PackageReceived"/> event.
            </summary>
            <param name="e">Passes <see cref="T:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs"/> to the event.</param>
        </member>
        <member name="E:NETworkManager.Models.Network.DiscoveryProtocol.ErrorReceived">
            <summary>
            Is triggered when an error occurs during the capturing.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.OnErrorReceived(NETworkManager.Models.Network.DiscoveryProtocolErrorArgs)">
            <summary>
            Triggers the <see cref="E:NETworkManager.Models.Network.DiscoveryProtocol.ErrorReceived"/> event.
            </summary>
            <param name="e">Passes <see cref="T:NETworkManager.Models.Network.DiscoveryProtocolErrorArgs"/> to the event.</param>
        </member>
        <member name="E:NETworkManager.Models.Network.DiscoveryProtocol.WarningReceived">
            <summary>
            Is triggered when a warning occurs during the capturing.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.OnWarningReceived(NETworkManager.Models.Network.DiscoveryProtocolWarningArgs)">
            <summary>
            Triggers the <see cref="E:NETworkManager.Models.Network.DiscoveryProtocol.WarningReceived"/> event.
            </summary>
            <param name="e">Passes <see cref="T:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs"/> to the event.</param>
        </member>
        <member name="E:NETworkManager.Models.Network.DiscoveryProtocol.Complete">
            <summary>
            Is triggered when the capturing is completed.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.OnComplete">
            <summary>
            Triggers the <see cref="E:NETworkManager.Models.Network.DiscoveryProtocol.Complete"/> event.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NETworkManager.Models.Network.DiscoveryProtocol"/> class.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocol.CaptureAsync(System.String,System.Int32,NETworkManager.Models.Network.DiscoveryProtocol.Protocol)">
            <summary>
            Captures the network packets on the passed network adapter asynchronously for a certain period of time and filters the packets according to the protocol.
            </summary>
            <param name="netAdapter">Network adapter as <see cref="T:System.String"/> like "Ethernet" or "WLAN".</param>
            <param name="duration">Duration in seconds.</param>
            <param name="protocol"><see cref="T:NETworkManager.Models.Network.DiscoveryProtocol.Protocol"/> to filter on.</param>
        </member>
        <member name="T:NETworkManager.Models.Network.DiscoveryProtocol.Protocol">
            <summary>
            Represents all discovery protocols.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.DiscoveryProtocol.Protocol.LLDP_CDP">
            <summary>
            Link layer and Cisco discovery protocol.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.DiscoveryProtocol.Protocol.LLDP">
            <summary>
            Link layer discovery protocol.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.DiscoveryProtocol.Protocol.CDP">
            <summary>
            Cisco discovery protocol.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs">
            <summary>
            Contains informations about a received discovery protocol package.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Device">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Port">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Model">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.VLAN">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.IPAddress">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Protocol">
            <summary>
            
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.Time">
            <summary>
            
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocolPackageArgs.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="port"></param>
            <param name="description"></param>
            <param name="model"></param>
            <param name="vlan"></param>
            <param name="ipAddress"></param>
            <param name="protocol"></param>
            <param name="time"></param>
        </member>
        <member name="T:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs">
            <summary>
            Event arguments when an 
            </summary>
        </member>
        <member name="P:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs.Message">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs"/> class.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NETworkManager.Models.Network.DiscoveryProtocolWarningArgs"/> class with a warning <paramref name="message"/>.
            </summary>
            <param name="message">Warning message.</param>
        </member>
        <member name="T:NETworkManager.Models.Network.IPv4Address">
            <summary>
            Class provides static methods to convert an IPv4 address.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.IPv4Address.IPv4MulticastStart">
            <summary>
            First possible IPv4 multicast address.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.IPv4Address.IPv4MulticastEnd">
            <summary>
            Last possible IPv4 multicast address.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.Network.IPv4Address.ToHumanString(System.String)">
            <summary>
            Method to convert a IPv4 address binary string ("11000000.10101000.00000001.00000001") to human readable string ("192.168.1.1").
            </summary>
            <param name="binaryString">IPv4 address as binary string ("11111111111111111111111100000000").</param>
            <returns>Converted IPv4 address as human readable string ("255.255.255.0").</returns>
        </member>
        <member name="M:NETworkManager.Models.Network.IPv4Address.ToBinaryString(System.String)">
            <summary>
            Method to convert an human readable IPv4 address ("192.168.1.1") to binary string ("11000000.10101000.00000001.00000001").
            </summary>
            <param name="humanString">IPv4 address as human readable string ("192.168.1.1").</param>
            <returns>Converted IPv4-Address as binary string ("11000000.10101000.00000001.00000001").</returns>
        </member>
        <member name="M:NETworkManager.Models.Network.IPv4Address.ToInt32(System.Net.IPAddress)">
            <summary>
            Method to convert an <see cref="T:System.Net.IPAddress"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="ipAddress"><see cref="T:System.Net.IPAddress"/>.</param>
            <returns>IP address as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:NETworkManager.Models.Network.IPv4Address.FromInt32(System.Int32)">
            <summary>
            Method to convert an <see cref="T:System.Int32"/> to an <see cref="T:System.Net.IPAddress"/>.
            </summary>
            <param name="i">IP address as <see cref="T:System.Int32"/>.</param>
            <returns>Converted <see cref="T:System.Net.IPAddress"/>.</returns>
        </member>
        <member name="M:NETworkManager.Models.Network.IPv4Address.IsMulticast(System.Net.IPAddress)">
            <summary>
            Method to check if an IPv4 address is a multicast address.
            </summary>
            <param name="ipAddress">IPv4 address as <see cref="T:System.Net.IPAddress"/>.</param>
            <returns>True if it is a multicast address. False if not.</returns>
        </member>
        <member name="T:NETworkManager.Models.Network.PortState">
            <summary>
            Represents the state of a port.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.PortState.Open">
            <summary>
            Port is open.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.Network.PortState.Closed">
            <summary>
            Port is closed.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.PuTTY.LogMode">
            <summary>
            Logging modes for PuTTY.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.LogMode.SessionLog">
            <summary>
            All session output will be logged.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.LogMode.SSHLog">
            <summary>
            SSH packages will be logged.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.LogMode.SSHRawLog">
            <summary>
            SSH packages and raw data will be logged.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.PuTTY.ConnectionMode">
            <summary>
            Connection modes for PuTTY.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.ConnectionMode.SSH">
            <summary>
            SSH connection.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.ConnectionMode.Telnet">
            <summary>
            Telnet connection.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.ConnectionMode.Serial">
            <summary>
            Serial connection.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.ConnectionMode.Rlogin">
            <summary>
            Rlogin connection.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.PuTTY.ConnectionMode.RAW">
            <summary>
            RAW connection.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.PuTTY.PuTTY">
            <summary>
            Class control PuTTY.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.PuTTY.PuTTY.BuildCommandLine(NETworkManager.Models.PuTTY.PuTTYSessionInfo)">
            <summary>
            Build command line arguments based on a <see cref="T:NETworkManager.Models.PuTTY.PuTTYSessionInfo"/>.
            </summary>
            <param name="sessionInfo">Instance of <see cref="T:NETworkManager.Models.PuTTY.PuTTYSessionInfo"/>.</param>
            <returns>Command line arguments like "-ssh -l root -i C:\data\key.ppk"</returns>
        </member>
        <member name="T:NETworkManager.Models.PuTTY.PuTTYSessionInfo">
            <summary>
            Stores informations about a PuTTY session.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.ApplicationFilePath">
            <summary>
            Full path to the PuTTY.exe on the filesystem.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.Mode">
            <summary>
            Mode (SSH, Telnet, etc.), which is used to establish the connection.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.HostOrSerialLine">
            <summary>
            Hostname or SerialLine. Depends on the <see cref="T:NETworkManager.Models.PuTTY.ConnectionMode"/>.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.PortOrBaud">
            <summary>
            Port or Baud. Depends on the <see cref="T:NETworkManager.Models.PuTTY.ConnectionMode"/>.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.Username">
            <summary>
            Username for login.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.PrivateKey">
            <summary>
            Path to the private key.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.Profile">
            <summary>
            PuTTY profile to use.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.EnableLog">
            <summary>
            Enables session log.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.LogMode">
            <summary>
            PuTTY log mode.
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.LogPath">
            <summary>
            Path to the PuTTY log files like "C:\temp".
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.LogFileName">
            <summary>
            Filename of the PuTTY log like "PuTTY.log".
            </summary>
        </member>
        <member name="P:NETworkManager.Models.PuTTY.PuTTYSessionInfo.AdditionalCommandLine">
            <summary>
            Additional command line argument. Everything putty can handle.
            </summary>
        </member>
        <member name="M:NETworkManager.Models.PuTTY.PuTTYSessionInfo.#ctor">
            <summary>
            Create an instance of <see cref="T:NETworkManager.Models.PuTTY.PuTTYSessionInfo"/>.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.RemoteDesktop.AudioCaptureRedirectionMode">
            <summary>
            Represents whether the default audio input is redirected from the client to the remote session.
            See also: https://docs.microsoft.com/en-us/windows/win32/termserv/imsrdpclientadvancedsettings7-audiocaptureredirectionmode
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.AudioCaptureRedirectionMode.RecordFromThisComputer">
            <summary>
            Redirect the default audio input device to the remote session.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.AudioCaptureRedirectionMode.DoNotRecord">
            <summary>
            Don't redirect the default audio input device to the remote session.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.RemoteDesktop.AudioRedirectionMode">
            <summary>
            Represents the audio redirection mode and different audio redirection options.
            See also: https://docs.microsoft.com/en-us/windows/win32/termserv/imsrdpclientadvancedsettings5-audioredirectionmode
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.AudioRedirectionMode.PlayOnThisComputer">
            <summary>
            Audio redirection is enabled and the option for redirection is "Bring to this computer". This is the default mode.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.AudioRedirectionMode.PlayOnRemoteComputer">
            <summary>
            Audio redirection is enabled and the option is "Leave at remote computer"
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.AudioRedirectionMode.DoNotPlay">
            <summary>
            Audio redirection is enabled and the mode is "Do not play".
            </summary>
        </member>
        <member name="T:NETworkManager.Models.RemoteDesktop.KeyboardHookMode">
            <summary>
            Represents the keyboard redirection settings, which specify how and when to apply Windows keyboard shortcut (for example, ALT+TAB).
            See also: https://docs.microsoft.com/en-us/windows/win32/termserv/imsrdpclientsecuredsettings-keyboardhookmode
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.KeyboardHookMode.OnThisComputer">
            <summary>
            Apply key combinations only locally at the client computer.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.KeyboardHookMode.OnTheRemoteComputer">
            <summary>
            Apply key combinations at the remote server.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.RemoteDesktop.Keystroke">
            <summary>
            Represents keystrokes which can be send into the remote session.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.Keystroke.CtrlAltDel">
            <summary>
            Ctrl + Alt + Del keystroke.
            </summary>
        </member>
        <member name="T:NETworkManager.Models.RemoteDesktop.NetworkConnectionType">
            <summary>
            Represents the network connection used between the client and server. 
            The network connection type information passed on to the server helps the server tune several parameters based on the network connection type.
            See also: https://docs.microsoft.com/en-us/windows/desktop/termserv/imsrdpclientadvancedsettings7-networkconnectiontype 
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.DetectAutomatically">
            <summary>
            Detect the network connection type automatically.
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.Modem">
            <summary>
            Modem (56 Kbps).
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.BroadbandLow">
            <summary>
            Low-speed broadband (256 Kbps to 2 Mbps).
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.Satellite">
            <summary>
            Satellite (2 Mbps to 16 Mbps, with high latency).
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.BroadbandHigh">
            <summary>
            High-speed broadband (2 Mbps to 10 Mbps).
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.WAN">
            <summary>
            Wide area network (WAN) (10 Mbps or higher, with high latency).
            </summary>
        </member>
        <member name="F:NETworkManager.Models.RemoteDesktop.NetworkConnectionType.LAN">
            <summary>
            Local area network (LAN) (10 Mbps or higher).
            </summary>
        </member>
    </members>
</doc>
